{"ast":null,"code":"import { REMOVE_FROM_CART, ADD_TO_CART, SET_QUANTITY } from \"../actions/index\";\nimport { initialState } from \"./initialState\";\n\nconst itemReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      //TODO\n      return Object.assign({}, state, {\n        cartItems: [...state.cartItems, action.payload]\n      });\n      break;\n\n    case REMOVE_FROM_CART:\n      //TODO\n      let data = state.cartItems.filter(item => item.itemId !== action.payload.itemId);\n      return Object.assign({}, state, {\n        cartItems: data\n      });\n      break;\n\n    case SET_QUANTITY:\n      let idx = state.cartItems.findIndex(el => el.itemId === action.payload.itemId);\n      let cartData = state.cartItems.slice(); //TODO\n\n      cartData[idx].quantity = action.payload.quantity;\n      return Object.assign({}, state, {\n        cartItems: cartData\n      });\n      break;\n\n    default:\n      return state;\n  }\n};\n\nexport default itemReducer;","map":{"version":3,"sources":["/Users/isujin/Desktop/codestates/im-sprint-cmarket-redux/src/reducers/itemReducer.js"],"names":["REMOVE_FROM_CART","ADD_TO_CART","SET_QUANTITY","initialState","itemReducer","state","action","type","Object","assign","cartItems","payload","data","filter","item","itemId","idx","findIndex","el","cartData","slice","quantity"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,EAAwCC,YAAxC,QAA4D,kBAA5D;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAL;AACE;AACA,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BK,QAAAA,SAAS,EAAE,CAAC,GAAGL,KAAK,CAACK,SAAV,EAAqBJ,MAAM,CAACK,OAA5B;AADmB,OAAzB,CAAP;AAIA;;AACF,SAAKX,gBAAL;AACE;AACA,UAAIY,IAAI,GAAGP,KAAK,CAACK,SAAN,CAAgBG,MAAhB,CACRC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgBT,MAAM,CAACK,OAAP,CAAeI,MADhC,CAAX;AAGA,aAAOP,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BK,QAAAA,SAAS,EAAEE;AADmB,OAAzB,CAAP;AAIA;;AACF,SAAKV,YAAL;AACE,UAAIc,GAAG,GAAGX,KAAK,CAACK,SAAN,CAAgBO,SAAhB,CACPC,EAAD,IAAQA,EAAE,CAACH,MAAH,KAAcT,MAAM,CAACK,OAAP,CAAeI,MAD7B,CAAV;AAGA,UAAII,QAAQ,GAAGd,KAAK,CAACK,SAAN,CAAgBU,KAAhB,EAAf,CAJF,CAKE;;AACAD,MAAAA,QAAQ,CAACH,GAAD,CAAR,CAAcK,QAAd,GAAyBf,MAAM,CAACK,OAAP,CAAeU,QAAxC;AACA,aAAOb,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BK,QAAAA,SAAS,EAAES;AADmB,OAAzB,CAAP;AAIA;;AACF;AACE,aAAOd,KAAP;AA/BJ;AAiCD,CAlCD;;AAoCA,eAAeD,WAAf","sourcesContent":["import { REMOVE_FROM_CART, ADD_TO_CART, SET_QUANTITY } from \"../actions/index\";\nimport { initialState } from \"./initialState\";\n\nconst itemReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      //TODO\n      return Object.assign({}, state, {\n        cartItems: [...state.cartItems, action.payload],\n      });\n\n      break;\n    case REMOVE_FROM_CART:\n      //TODO\n      let data = state.cartItems.filter(\n        (item) => item.itemId !== action.payload.itemId\n      );\n      return Object.assign({}, state, {\n        cartItems: data,\n      });\n\n      break;\n    case SET_QUANTITY:\n      let idx = state.cartItems.findIndex(\n        (el) => el.itemId === action.payload.itemId\n      );\n      let cartData = state.cartItems.slice();\n      //TODO\n      cartData[idx].quantity = action.payload.quantity;\n      return Object.assign({}, state, {\n        cartItems: cartData,\n      });\n\n      break;\n    default:\n      return state;\n  }\n};\n\nexport default itemReducer;\n"]},"metadata":{},"sourceType":"module"}