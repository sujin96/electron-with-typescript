{"ast":null,"code":"var _jsxFileName = \"/Users/isujin/Desktop/codestates/im-sprint-cmarket-redux/src/components/Toast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Toast(_ref) {\n  _s();\n\n  let {\n    text,\n    dismissTime\n  } = _ref;\n  const [isFading, setIsFading] = useState(false);\n  useEffect(() => {\n    let mounted = true;\n    setTimeout(() => {\n      if (mounted) {\n        setIsFading(true);\n      }\n    }, dismissTime - 500);\n    return () => {\n      mounted = false;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `notification ${isFading ? 'fade-out' : ''}`,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Toast, \"6k7S6yvYRRO8eaj3jUX8fbZqOs0=\");\n\n_c = Toast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toast\");","map":{"version":3,"sources":["/Users/isujin/Desktop/codestates/im-sprint-cmarket-redux/src/components/Toast.js"],"names":["React","useEffect","useState","Toast","text","dismissTime","isFading","setIsFading","mounted","setTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,eAAe,SAASC,KAAT,OAAsC;AAAA;;AAAA,MAAvB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAuB;AACnD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,OAAO,GAAG,IAAd;AACAC,IAAAA,UAAU,CAAC,MAAM;AACf,UAAID,OAAJ,EAAa;AACXD,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,KAJS,EAIPF,WAAW,GAAG,GAJP,CAAV;AAMA,WAAO,MAAM;AACXG,MAAAA,OAAO,GAAG,KAAV;AACD,KAFD,CARc,CAWd;AACD,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAG,gBAAeF,QAAQ,GAAG,UAAH,GAAgB,EAAG,EAA3D;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAtBuBD,K;;KAAAA,K","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nexport default function Toast({ text, dismissTime }) {\n  const [isFading, setIsFading] = useState(false)\n\n  useEffect(() => {\n    let mounted = true\n    setTimeout(() => {\n      if (mounted) {\n        setIsFading(true)\n      }\n    }, dismissTime - 500)\n\n    return () => {\n      mounted = false\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div className={`notification ${isFading ? 'fade-out' : ''}`}>\n      {text}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}