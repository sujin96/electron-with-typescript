{"ast":null,"code":"// action types\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const SET_QUANTITY = \"SET_QUANTITY\";\nexport const NOTIFY = \"NOTIFY\";\nexport const ENQUEUE_NOTIFICATION = \"ENQUEUE_NOTIFICATION\";\nexport const DEQUEUE_NOTIFICATION = \"DEQUEUE_NOTIFICATION\"; // actions creator functions\n\nexport const addToCart = itemId => {\n  return {\n    type: ADD_TO_CART,\n    payload: {\n      quantity: 1,\n      itemId\n    }\n  };\n};\nexport const removeFromCart = itemId => {\n  return {\n    //TODO\n    type: REMOVE_FROM_CART,\n    payload: {\n      itemId\n    }\n  };\n};\nexport const setQuantity = (itemId, quantity) => {\n  return {\n    //TODO\n    type: SET_QUANTITY,\n    payload: {\n      itemId,\n      quantity\n    }\n  };\n};\nexport const notify = function (message) {\n  let dismissTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5000;\n  return dispatch => {\n    const uuid = Math.random();\n    dispatch(enqueueNotification(message, dismissTime, uuid));\n    setTimeout(() => {\n      dispatch(dequeueNotification());\n    }, dismissTime);\n  };\n};\nexport const enqueueNotification = (message, dismissTime, uuid) => {\n  return {\n    type: ENQUEUE_NOTIFICATION,\n    payload: {\n      message,\n      dismissTime,\n      uuid\n    }\n  };\n};\nexport const dequeueNotification = () => {\n  return {\n    type: DEQUEUE_NOTIFICATION\n  };\n};","map":{"version":3,"sources":["/Users/isujin/Desktop/codestates/im-sprint-cmarket-redux/src/actions/index.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","SET_QUANTITY","NOTIFY","ENQUEUE_NOTIFICATION","DEQUEUE_NOTIFICATION","addToCart","itemId","type","payload","quantity","removeFromCart","setQuantity","notify","message","dismissTime","dispatch","uuid","Math","random","enqueueNotification","setTimeout","dequeueNotification"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,MAAM,GAAG,QAAf;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B,C,CAEP;;AACA,OAAO,MAAMC,SAAS,GAAIC,MAAD,IAAY;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAER,WADD;AAELS,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE,CADH;AAEPH,MAAAA;AAFO;AAFJ,GAAP;AAOD,CARM;AAUP,OAAO,MAAMI,cAAc,GAAIJ,MAAD,IAAY;AACxC,SAAO;AACL;AACAC,IAAAA,IAAI,EAAEP,gBAFD;AAGLQ,IAAAA,OAAO,EAAE;AACPF,MAAAA;AADO;AAHJ,GAAP;AAOD,CARM;AAUP,OAAO,MAAMK,WAAW,GAAG,CAACL,MAAD,EAASG,QAAT,KAAsB;AAC/C,SAAO;AACL;AACAF,IAAAA,IAAI,EAAEN,YAFD;AAGLO,IAAAA,OAAO,EAAE;AACPF,MAAAA,MADO;AAEPG,MAAAA;AAFO;AAHJ,GAAP;AAQD,CATM;AAWP,OAAO,MAAMG,MAAM,GACjB,UAACC,OAAD;AAAA,MAAUC,WAAV,uEAAwB,IAAxB;AAAA,SACCC,QAAD,IAAc;AACZ,UAAMC,IAAI,GAAGC,IAAI,CAACC,MAAL,EAAb;AACAH,IAAAA,QAAQ,CAACI,mBAAmB,CAACN,OAAD,EAAUC,WAAV,EAAuBE,IAAvB,CAApB,CAAR;AACAI,IAAAA,UAAU,CAAC,MAAM;AACfL,MAAAA,QAAQ,CAACM,mBAAmB,EAApB,CAAR;AACD,KAFS,EAEPP,WAFO,CAAV;AAGD,GAPD;AAAA,CADK;AAUP,OAAO,MAAMK,mBAAmB,GAAG,CAACN,OAAD,EAAUC,WAAV,EAAuBE,IAAvB,KAAgC;AACjE,SAAO;AACLT,IAAAA,IAAI,EAAEJ,oBADD;AAELK,IAAAA,OAAO,EAAE;AACPK,MAAAA,OADO;AAEPC,MAAAA,WAFO;AAGPE,MAAAA;AAHO;AAFJ,GAAP;AAQD,CATM;AAWP,OAAO,MAAMK,mBAAmB,GAAG,MAAM;AACvC,SAAO;AACLd,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD,CAJM","sourcesContent":["// action types\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const SET_QUANTITY = \"SET_QUANTITY\";\nexport const NOTIFY = \"NOTIFY\";\nexport const ENQUEUE_NOTIFICATION = \"ENQUEUE_NOTIFICATION\";\nexport const DEQUEUE_NOTIFICATION = \"DEQUEUE_NOTIFICATION\";\n\n// actions creator functions\nexport const addToCart = (itemId) => {\n  return {\n    type: ADD_TO_CART,\n    payload: {\n      quantity: 1,\n      itemId,\n    },\n  };\n};\n\nexport const removeFromCart = (itemId) => {\n  return {\n    //TODO\n    type: REMOVE_FROM_CART,\n    payload: {\n      itemId,\n    },\n  };\n};\n\nexport const setQuantity = (itemId, quantity) => {\n  return {\n    //TODO\n    type: SET_QUANTITY,\n    payload: {\n      itemId,\n      quantity,\n    },\n  };\n};\n\nexport const notify =\n  (message, dismissTime = 5000) =>\n  (dispatch) => {\n    const uuid = Math.random();\n    dispatch(enqueueNotification(message, dismissTime, uuid));\n    setTimeout(() => {\n      dispatch(dequeueNotification());\n    }, dismissTime);\n  };\n\nexport const enqueueNotification = (message, dismissTime, uuid) => {\n  return {\n    type: ENQUEUE_NOTIFICATION,\n    payload: {\n      message,\n      dismissTime,\n      uuid,\n    },\n  };\n};\n\nexport const dequeueNotification = () => {\n  return {\n    type: DEQUEUE_NOTIFICATION,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}